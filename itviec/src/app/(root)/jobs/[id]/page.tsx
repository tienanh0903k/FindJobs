'use client';

import React, { useState, useEffect } from 'react';
import classNames from 'classnames/bind';
import styles from './styles.module.css';
import { ItemJobs, ItemJobsTest } from '@/components/client/Jobs/ItemJobs';
import ApplyModal from '@/components/client/Jobs/ModalApply/Formapply';
import { useParams } from 'next/navigation';
import { useQuery } from '@tanstack/react-query';
import postsApi from '@/api/postsApi';
import moment from 'moment';

const cx = classNames.bind(styles);

const JobListing = () => {
	const { id } = useParams<{ id: string }>();
	const [isScrollActive, setIsScrollActive] = useState(false);
	const [isModalVisible, setIsModalVisible] = useState(false);
	

	// const fetch = async (id) => {
	// 	const data =  await  postsApi.getPostById(id);
	// 	console.log('-data', data);
	// 	return data
	// }
	const { id: jobId } = useParams<{ id: string }>();
	
	const { data, error, isLoading, isError } = useQuery({
		queryKey: ['job', id], 
		queryFn: async () => {
			if (!id) throw new Error('ID is required'); 
			const data = await postsApi.getPostById(id); 
			console.log('-data', data);
			return data;
		}
	});

	useEffect(() => {
		const handleScroll = () => {
			setIsScrollActive(window.scrollY > 100);
		};

		window.addEventListener('scroll', handleScroll);
		return () => window.removeEventListener('scroll', handleScroll);
	}, []);


	
	const handleApply = async (formData: FormData) => {
		try {
		  const response = await fetch('http://localhost:3001/api/application/upload', {
			method: 'POST',
			body: formData,
		  });
	
		  if (response.ok) {
			alert('N·ªôp h·ªì s∆° th√†nh c√¥ng!');
			setIsModalVisible(false);
		  } else {
			console.error('N·ªôp h·ªì s∆° th·∫•t b·∫°i.');
		  }
		} catch (error) {
		  console.error('L·ªói khi n·ªôp h·ªì s∆°:', error);
		}
	  };

	return (
		<div className="h-[1500px] w-full relative">
			<div className={cx('gradient-background')}></div>
			<section className="mt-24 relative">
				<header className={cx('job-show-header', { 'scroll-active': isScrollActive })}>
					<div className={cx('ribbon-wrapper')}>
						<div className={cx('ribbon')}>Hot</div>
					</div>
					<div className="m-2 p-2 bg-gray-100 rounded-sm shadow-md box-border">
						<div className="job-info m-2 p-2 flex items-start flex-wrap">
							<div className="w-full ml-4 overflow-hidden">
								<h3 className="text-lg text-gray-500 font-semibold">Frontend Developer</h3>
								<h1 className="font-semibold text-lg md:text-xl leading-snug">
									{data?.position}
								</h1>
								<div className="flex flex-wrap gap-6 mt-2">
									<div className="flex items-center">
										<span>üí∞</span>
										<h4 className="text-base text-gray-500  font-semibold">
											M·ª©c l∆∞∆°ng: {data?.salary}
										</h4>
									</div>
									<div className="flex items-center">
										<span>üóìÔ∏è</span>
										<h4 className="text-base  text-gray-500 font-semibold">
											H·∫°n n·ªôp h·ªì s∆°: {
												moment(data?.deadline).format('DD/MM/YYYY')
											}
										</h4>
									</div>
									<div className="flex items-center">
										<span>üìç</span>
										<h4 className="text-base  text-gray-500 font-semibold">
											Khu v·ª±c tuy·ªÉn: {
												data?.location
											}
										</h4>
									</div>
								</div>
								<div className="flex flex-col md:flex-row justify-between mt-4">
									<div className="w-full md:w-[60%] flex">
										<button
											onClick={() => {
												setIsModalVisible(true);
											}}
											className="bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition"
										>
											N·ªôp h·ªì s∆°
										</button>
										<button className="flex items-center justify-center py-2 px-4 rounded-md border border-gray-300 hover:bg-gray-100 transition ml-2">
											L∆∞u
										</button>
									</div>
									<div className="flex flex-col items-start mt-4 md:mt-0">
										<div className="flex gap-4 text-sm text-gray-600">
											<span>üïí Ng√†y c·∫≠p nh·∫≠t: 25/09/2024 08:42</span>
											<span>üëÅÔ∏è L∆∞·ª£t xem: 147</span>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</header>

				<section className="m-4 p-4">
					<div className="flex flex-col lg:flex-row lg:space-x-8">
						<div className="lg:w-3/4 bg-white rounded-sm pb-4">
							<div className="flex mb-2">
								<button className="px-4 py-2 font-semibold text-blue-600 border-b-2 border-blue-600">
									Chi ti·∫øt tuy·ªÉn d·ª•ng
								</button>
								<button className="px-4 py-2 font-semibold text-gray-600">C√¥ng ty</button>
							</div>
							<div className="px-2">
								<div className="text-2xl font-semibold p-2">Th√¥ng tin chung</div>
								<div className="bg-[#F5F3FF] px-4 pt-5 pb-1 mb-6">
									<div className="md:flex md:border-b border-[#DDD6FE] mb-4">
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">Ng√†y ƒëƒÉng</p>
												<p className="text-14">{moment(data?.postedDate).format('DD/MM/YYYY')}</p>
											</h3>
										</div>
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">Th·ªùi gian th·ª≠ vi·ªác</p>
												<p className="text-14">25/09/2024</p>
											</h3>
										</div>
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">C·∫•p b·∫≠c</p>
												<p className="text-14">{data?.level}</p>
											</h3>
										</div>
									</div>
									<div className="md:flex md:border-b border-[#DDD6FE] mb-4">
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">S·ªë l∆∞·ª£ng tuy·ªÉn</p>
												<p className="text-14">{data?.numberOfPositions}</p>
											</h3>
										</div>
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">H√¨nh th·ª©c l√†m vi·ªác</p>
												<p className="text-14">Full time</p>
											</h3>
										</div>
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">Ng√†y ƒëƒÉng</p>
												<p className="text-14">25/09/2024</p>
											</h3>
										</div>
									</div>
									<div className="md:flex md:border-b border-[#DDD6FE] mb-4">
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">Y√™u c·∫ßu b·∫±ng c·∫•p</p>
												<p className="text-14">{data?.requirements}</p>
											</h3>
										</div>
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">Email li√™n h·ªá</p>
												<p className="text-14">{data?.contactInfo}</p>
											</h3>
										</div>
										<div className="flex items-center mb-4 md:w-[33%]">
											<span>I</span>
											<h3 className="ml-3">
												<p className="mr-1 text-se-neutral-64 text-12">Trang thai</p>
												<p className="text-14">{data?.status}</p>
											</h3>
										</div>
									</div>
								</div>

								<div className="jd px-2 m-2">
									<div className="text-2xl font-semibold p-2">M√¥ t·∫£ c√¥ng vi·ªác</div>
									<div className="mb-2 text-14 break-words">
										<p>
											- Qu·∫£n l√Ω v√† ph√°t tri·ªÉn th·ªã tr∆∞·ªùng s∆°n t·∫°i khu v·ª±c ƒë∆∞·ª£c ph√¢n c√¥ng t·∫°i H√† N·ªôi,
											H·∫£i Ph√≤ng, Qu·∫£ng Ninh, Nam ƒê·ªãnh, Th√°i B√¨nh v√† c√°c khu v·ª±c Ph√≠a B·∫Øc
										</p>
										<p>- L·∫≠p k·∫ø ho·∫°ch kinh doanh theo tu·∫ßn, th√°ng, qu√Ω nƒÉm</p>
										<p>- L·∫≠p k·∫ø ho·∫°ch c√¥ng t√°c theo ng√†y, tu·∫ßn</p>
										<p>
											- B√°o c√°o k·∫øt qu·∫£ c√¥ng vi·ªác theo ng√†y, tu·∫ßn, th√°ng, nƒÉm cho gi√°m ƒë·ªëc kinh
											doanh
										</p>
										<p>
											- Ph√°t tri·ªÉn th·ªã tr∆∞·ªùng, m·ªü m·ªõi kh√°ch h√†ng t·∫°i th·ªã tr∆∞·ªùng khu v·ª±c ƒë∆∞·ª£c giao.
										</p>
										<p>- So·∫°n th·∫£o h·ª£p ƒë·ªìng, b√°o gi√° cho kh√°ch h√†ng t·∫°i khu v·ª±c</p>
										<p>
											- T∆∞ v·∫•n cho gi√°m ƒë·ªëc kinh doanh v√† ban l√£nh ƒë·∫°o c√¥ng ty v·ªÅ vi·ªác ph√°t tri·ªÉn
											th∆∞∆°ng hi·ªáu t·∫°i th·ªã tr∆∞·ªùng khu v·ª±c.
										</p>
										<p>- Thu h·ªìi c√¥ng n·ª£ kh√°ch h√†ng t·∫°i khu v·ª±c qu·∫£n l√Ω.</p>
										<p>
											- ChƒÉm s√≥c v√† ph√°t tri·ªÉn kh√°ch h√†ng c≈© c·ªßa c√¥ng ty t·∫°i ƒë·ªãa b√†n khu v·ª±c ƒë∆∞·ª£c
											giao.
										</p>
									</div>
								</div>

								<div className="jd px-2 m-2">
									<div className="text-2xl font-semibold p-2">M√¥ t·∫£ c√¥ng vi·ªác</div>
									<div className="mb-2 text-14 break-words">
										<p>
											- Qu·∫£n l√Ω v√† ph√°t tri·ªÉn th·ªã tr∆∞·ªùng s∆°n t·∫°i khu v·ª±c ƒë∆∞·ª£c ph√¢n c√¥ng t·∫°i H√† N·ªôi,
											H·∫£i Ph√≤ng, Qu·∫£ng Ninh, Nam ƒê·ªãnh, Th√°i B√¨nh v√† c√°c khu v·ª±c Ph√≠a B·∫Øc
										</p>
										<p>- L·∫≠p k·∫ø ho·∫°ch kinh doanh theo tu·∫ßn, th√°ng, qu√Ω nƒÉm</p>
										<p>- L·∫≠p k·∫ø ho·∫°ch c√¥ng t√°c theo ng√†y, tu·∫ßn</p>
										<p>
											- B√°o c√°o k·∫øt qu·∫£ c√¥ng vi·ªác theo ng√†y, tu·∫ßn, th√°ng, nƒÉm cho gi√°m ƒë·ªëc kinh
											doanh
										</p>
										<p>
											- Ph√°t tri·ªÉn th·ªã tr∆∞·ªùng, m·ªü m·ªõi kh√°ch h√†ng t·∫°i th·ªã tr∆∞·ªùng khu v·ª±c ƒë∆∞·ª£c giao.
										</p>
										<p>- So·∫°n th·∫£o h·ª£p ƒë·ªìng, b√°o gi√° cho kh√°ch h√†ng t·∫°i khu v·ª±c</p>
										<p>
											- T∆∞ v·∫•n cho gi√°m ƒë·ªëc kinh doanh v√† ban l√£nh ƒë·∫°o c√¥ng ty v·ªÅ vi·ªác ph√°t tri·ªÉn
											th∆∞∆°ng hi·ªáu t·∫°i th·ªã tr∆∞·ªùng khu v·ª±c.
										</p>
										<p>- Thu h·ªìi c√¥ng n·ª£ kh√°ch h√†ng t·∫°i khu v·ª±c qu·∫£n l√Ω.</p>
										<p>
											- ChƒÉm s√≥c v√† ph√°t tri·ªÉn kh√°ch h√†ng c≈© c·ªßa c√¥ng ty t·∫°i ƒë·ªãa b√†n khu v·ª±c ƒë∆∞·ª£c
											giao.
										</p>
									</div>
								</div>

								<div className="">
									<h2 className=" text-24 font-semibold py-4">ƒê·ªãa ƒëi·ªÉm l√†m vi·ªác</h2>
									<div className="">
										<h3 className=" mb-2 flex text-14">
											<span className=" text-primary font-medium pt-[1px]">
												<i className=" svicon-map-marker-alt mr-1" />
											</span>
											<span className="">
												<span className=" text-primary font-medium pt-[1px] text-12">H√† N·ªôi</span>,
												S·ªë 68, Ng√µ 10, Nguy·ªÖn Th·ªã ƒê·ªãnh, Trung H√≤a, C·∫ßu Gi·∫•y
											</span>
										</h3>
										<h3 className=" mb-2 flex text-14">
											<span className=" text-primary font-medium pt-[1px]">
												<i className=" svicon-map-marker-alt mr-1" />
											</span>
											<span className="">
												<span className=" text-primary font-medium pt-[1px] text-12">TP.HCM</span>,
												S·ªë nh√† 22, ƒê∆∞·ªùng s·ªë 8, H√† ƒê√¥ Centrosa, Ph∆∞·ªùng 12, Qu·∫≠n 10
											</span>
										</h3>
										<h3 className=" mb-2 flex text-14">
											<span className=" text-primary font-medium pt-[1px]">
												<i className=" svicon-map-marker-alt mr-1" />
											</span>
											<span className="">
												<span className=" text-primary font-medium pt-[1px] text-12">H√† N·ªôi</span>,
												39M2, Ng√µ 37 Tr·∫ßn Kim Xuy·∫øn, Y√™n H√≤a, C·∫ßu Gi·∫•y
											</span>
										</h3>
									</div>
								</div>
							</div>
						</div>

						<div className="lg:w-1/4 p-4">
							<div className="px-4 md:px-0 top-4 pb-2">
								{[...Array(6)].map((_, index) => (
									<div key={index} className="my-2">
										<ItemJobsTest />
									</div>
								))}
							</div>
						</div>

						<ApplyModal
							jobId={jobId}
							visible={isModalVisible}
							onCancel={() => setIsModalVisible(false)}
							onApply={handleApply}
						/>
					</div>
				</section>
			</section>
		</div>
	);
};

export default JobListing;
